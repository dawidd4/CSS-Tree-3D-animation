:root {
    --animation: anim_2; /* 1-4 */

    --c_width: 100vw;
    --c_height: 100vh;
    --ground_width: 36vw;
    --ground_height: 36vw;

    --tree_shadow_width: 16vw;
    --tree_shadow_blur: blur(3vw);
    --tree_shadow_opacity: 0.5;

    --tree_width: 30vw;
    --tree_height: 26vw;
}

/* matrix3d playground: */

#sample-tree {
    /*matrix3d below won't work if
    overriden by animations
    having matrices3d
    (just comment out "animation:" in line 32)
    (╯°□°）╯︵ ┻━┻
    */
    transform: matrix3d(
        1, 0, 0, 0,
        0, 1, 0, 0,
        0, 0, 1, 0,
        0, 0, 0, 1);
    animation: var(--animation) 4s ease-in-out infinite alternate;
    /* transform-origin: 0vw 0vw 0vw; */
}

body {
    background-color: #2c2c2c;
    overflow: hidden;
    margin: 0;
}

.orbitbinder {
    transform-origin: calc(var(--c_width)/2) calc(var(--c_height)/2);
    transform: rotateX(33deg) rotateZ(67deg);
    transform-style: preserve-3d;
}

.sample-container {
    width: var(--c_width);
    height: var(--c_height);
    perspective: 100vw;
}

#sample-ground {
    position: absolute;
    width: var(--ground_width);
    height: var(--ground_height);
    background-image: url('grass.jpg');
    /*put ground to the center and 10vw down: */
    transform: translate3d(calc(50vw - var(--ground_width)/2),
        calc(50vh - var(--ground_height)/2),
        -10vh);
    transform-style: preserve-3d;
}

#sample-ground::before {
    content: "";
    display: block;
    position: absolute;
    border-radius: 50%;
    filter: var(--tree_shadow_blur);
    opacity: var(--tree_shadow_opacity);
    width: var(--tree_shadow_width);
    height: var(--tree_shadow_width);
    transform: translate(
        calc((var(--ground_width) - var(--tree_shadow_width))/2),
        calc((var(--ground_height) - var(--tree_shadow_width))/2));
    background-color: black;
}

/*place the tree to the center*/
#sample-tree {
    position: absolute;
    left: calc(var(--ground_width)/2);
    top: calc(var(--ground_height)/2);
    /*transform: translate(
      calc(var(--ground_width)/2),
      calc(var(--ground_height)/2)
    );RESERVERD FOR MATRIX3D TRANSFORMATIONS ¯\_(ツ)_/¯*/
    transform-style: preserve-3d;
}

#sample-tree::before,
#sample-tree::after {
    content: "";
    display: block;
    position: absolute;
    width: var(--tree_width);
    height: var(--tree_height);
    transform-origin: bottom;
    background: url('tree.png') no-repeat;
    background-size: 100% 100%;

}

#sample-tree::before {
    transform: translate(
        calc(0vw - var(--tree_width)/2),
        calc(0vw - var(--tree_height)))
    rotateX(270deg);
}

#sample-tree::after {
    transform: translate(
        calc(0vw - var(--tree_width)/2),
        calc(0vw - var(--tree_height)))
    rotateX(270deg) rotateY(90deg);
}

/* another matrix3d playground (for the animations): */

@keyframes anim_1 {
    from { transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1.25,.001,0,0,0,1); }
    to { transform: matrix3d(1,0,0,0,0,1,0,0,0,0,.5,-.001,0,0,0,1); }
  }
  
  @keyframes anim_2 {
    from { transform: matrix3d(1,0,0,0,0,1,0,0,.0625,0,1,0,0,0,0,1); }
    to { transform: matrix3d(1,0,0,0,0,1,0,0,-.0625,0,1,0,0,0,0,1); }
  }
  
  @keyframes anim_3 {
    0% { transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,-70,-70,0,1); }
    25% { transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,70,-70,0,1); }
    50% { transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,70,70,0,1); }
    75% { transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,-70,70,0,1); }
    100% { transform: matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,-70,-70,0,1); }
  }
  @keyframes anim_4 {
    from { transform: matrix3d(0,0,1,0,0,1,0,0,-1,0,.1,0,0,0,0,1); }
    to { transform: matrix3d(0,0,-1,0,0,1,0,0,1,0,.1,0,0,0,0,1); }
  }
